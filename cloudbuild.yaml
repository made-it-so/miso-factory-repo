steps:
# Build and push the service images
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-east4-docker.pkg.dev/$PROJECT_ID/miso-factory/orchestrator:latest', './orchestrator']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-east4-docker.pkg.dev/$PROJECT_ID/miso-factory/python-agent:latest', './python-agent']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-east4-docker.pkg.dev/$PROJECT_ID/miso-factory/frontend:latest', './frontend']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-east4-docker.pkg.dev/$PROJECT_ID/miso-factory/orchestrator:latest']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-east4-docker.pkg.dev/$PROJECT_ID/miso-factory/python-agent:latest']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-east4-docker.pkg.dev/$PROJECT_ID/miso-factory/frontend:latest']

# Set the startup script on the VM
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'compute'
  - 'instances'
  - 'add-metadata'
  - 'miso-final-vm'
  - '--zone=us-east4-c'
  - '--metadata-from-file=startup-script=./deploy-miso.sh'

# Trigger the startup script by resetting the VM
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['compute', 'instances', 'reset', 'miso-final-vm', '--zone=us-east4-c']

options:
  logging: CLOUD_LOGGING_ONLY
